REST API - это архитектурный стиль. Набор правил для серверного приложения.

Концепции REST API:
* Модель взаимодействия клиент - сервер
* Система может быть многоуровневой
* Stateless - отсутствие состояния (каждый раз клиент и сервер общаются как в первый раз, нужно отправить
вновь всю информацию необходимую для выполнения запроса)
* Единообразие интерфейса (все ресурсы доступны по одному URL, все запросы выполняются по одному протоколу)
- Например: GET /users, GET /users/1, POST /users, PUT /users/1, DELETE /users/1
* Семантическая надежность (запросы должны быть понятными, например, GET /users - получить всех пользователей
* Идемпотентность (если запрос выполняется несколько раз, результат не изменится, например,
PUT /users/1 - обновить пользователя с id=1),
а вот POST /users - создать пользователя, если выполнить несколько раз, то создастся несколько пользователей)
* Кеширование
- GET и POST могут быть кешированы, PUT и DELETE - нет

Формат обмена данными:
Почти любой формат, но чаще всего:
* JSON - JavaScript Object Notation (предпочтительнее)
* XML - eXtensible Markup Language (устаревший, но все еще используется)

Версионирование API:
* В URL: /api/users
* В URL: /api/v1/users

Документация:
* OpenAPI - cпецификация для описания REST API
* Swagger - инструмент для создания документации по OpenAPI
